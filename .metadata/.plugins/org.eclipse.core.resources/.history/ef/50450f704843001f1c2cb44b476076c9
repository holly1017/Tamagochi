package view;

import java.util.Scanner;
import controller.TamagochiController;

public class GameMenu {
    TamagochiController tc = new TamagochiController();
    Scanner sc = new Scanner(System.in);

    public void mainMenu() {
        while (true) {
            System.out.println("******** Welcome to Tamagochi Game! ********");
            // 게임 난이도를 입력 받음
            System.out.print("- select difficulty level( 1 / 2 / 3 ) : ");
            int level = sc.nextInt();
            sc.nextLine();
            tc.setDifficultyLevel(level);

            System.out.print("캐릭터를 생성하시겠습니까? ( y / n ) : ");
            char reply = sc.nextLine().charAt(0);
            if (reply == 'y' || reply == 'Y') {
                // 캐릭터를 생성
                tc.createCharacter();
            } else {
                System.out.println("게임을 종료합니다.");
                return;
            }

            // 랜덤으로 생성된 다마고치의 이름을 출력하기
            System.out.println("당신의 다마고치는 " + tc.getCharacter().getName() + "입니다.");
            gameLoop();
        }
    }

    private void gameLoop() {
        while (!tc.isGameOver()) {
            displayStatus();
            displayMenu();
            int choice = sc.nextInt();
            sc.nextLine();
            handleMenuChoice(choice);
            tc.passTime();
        }
        System.out.println("Your character has died. Game Over.");
    }

    private void displayStatus() {
        System.out.println(tc.getStatus());
    }

    private void displayMenu() {
        System.out.println("1. Feed");
        System.out.println("2. Clean");
        System.out.println("3. Walk");
        System.out.println("4. Save");
        System.out.println("5. Exit");
    }

    private void handleMenuChoice(int choice) {
        switch (choice) {
            case 1:
                tc.feedCharacter();
                break;
            case 2:
                tc.cleanCharacter();
                break;
            case 3:
                tc.walkCharacter();
                break;
            case 4:
                saveGame();
                break;
            case 5:
                System.exit(0);
            default:
                System.out.println("Invalid choice. Please try again.");
        }
    }

    private void saveGame() {
        // Implement game saving logic here
        System.out.println("Game saved.");
    }

    public static void main(String[] args) {
        GameMenu gameMenu = new GameMenu();
        gameMenu.mainMenu();
    }
}
